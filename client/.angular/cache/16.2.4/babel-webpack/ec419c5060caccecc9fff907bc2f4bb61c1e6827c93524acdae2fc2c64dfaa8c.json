{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { catchError } from 'rxjs/operators';\nimport { selectIsLogin } from '../../store/app.selector';\nimport * as MyActions from '../../store/app.actions';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { throwError } from 'rxjs';\nexport let LoginComponent = class LoginComponent {\n  constructor(fb, http, store, authService, location, router) {\n    this.fb = fb;\n    this.http = http;\n    this.store = store;\n    this.authService = authService;\n    this.location = location;\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken();\n    if (token) {\n      this.store.dispatch(MyActions.login());\n      this.router.navigate(['/']);\n    }\n    // console.log(token)\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.store.select(selectIsLogin).subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      const postData = {\n        ...this.loginForm.value\n      };\n      const url = 'http://localhost:3000/users/login';\n      this.http.post(url, postData).pipe(catchError(error => {\n        if (error.error instanceof ErrorEvent) {\n          // Client-side error\n          this.error = error.error;\n          console.log(this.error.message);\n          console.error('An error occurred:', error.error.message);\n        } else {\n          // Server-side error\n          this.error = error.error;\n          console.error(`Backend returned code ${error.status}, body was: ${this.error}`);\n        }\n        // You can handle the error here, e.g., display it to the user\n        // or log it, and then re-throw it so the subscriber can also handle it\n        return throwError('Something went wrong. Please try again later.');\n      })).subscribe(response => {\n        console.log('POST request successful', response);\n        this.responseData = response;\n        if (this.responseData) {\n          const user = this.responseData.user;\n          const authToken = this.responseData.token;\n          this.authService.setAuthData(user, authToken);\n          this.isAuthenticated = true;\n          this.store.dispatch(MyActions.login());\n          this.router.navigate(['/']);\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","catchError","selectIsLogin","MyActions","ChangeDetectionStrategy","throwError","LoginComponent","constructor","fb","http","store","authService","location","router","isAuthenticated","ngOnInit","token","getAuthToken","dispatch","login","navigate","loginForm","group","email","required","password","select","subscribe","isLogin","onSubmit","valid","console","log","value","postData","url","post","pipe","error","ErrorEvent","message","status","response","responseData","user","authToken","setAuthData","__decorate","selector","templateUrl","styleUrls","changeDetection","Default"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient,HttpErrorResponse  } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class LoginComponent implements OnInit {\n  error:any\n  responseData:any\n  loginForm: FormGroup;\n  isLogin: boolean | undefined;\n  isAuthenticated: boolean = false;\n  constructor(private fb: FormBuilder, private http: HttpClient,private store: Store,private authService: AuthService,private location:Location,private router:Router) { \n    \n   \n  }\n\n  ngOnInit() {\n\n  \n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken()\n    if(token){\n      this.store.dispatch(MyActions.login());\n      this.router.navigate(['/']);\n    }\n    // console.log(token)\n    \n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.store.select(selectIsLogin).subscribe((isLogin) => {\n      this.isLogin = isLogin;\n    });\n    \n  \n  }\n\n  onSubmit() {\n    \n    if (this.loginForm.valid) {\n      \n      console.log(this.loginForm.value);\n\n      const postData = {\n         ...this.loginForm.value\n      };\n  \n      const url = 'http://localhost:3000/users/login'; \n  \n      this.http.post(url, postData)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          if (error.error instanceof ErrorEvent) {\n            // Client-side error\n            this.error =error.error\n            console.log(this.error.message)\n            console.error('An error occurred:', error.error.message);\n          } else {\n            // Server-side error\n            this.error =error.error\n            console.error(`Backend returned code ${error.status}, body was: ${this.error}`);\n          }\n          // You can handle the error here, e.g., display it to the user\n          // or log it, and then re-throw it so the subscriber can also handle it\n          return throwError('Something went wrong. Please try again later.');\n        }))\n      \n      .subscribe((response) => {\n        console.log('POST request successful', response);\n\n        this.responseData =response\n        if(this.responseData){\n        const user = this.responseData.user\n        const authToken = this.responseData.token  \n        this.authService.setAuthData(user,authToken);\n        this.isAuthenticated = true;\n        this.store.dispatch(MyActions.login());\n        this.router.navigate(['/']);\n      \n        }\n       \n        \n    \n        \n      });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}