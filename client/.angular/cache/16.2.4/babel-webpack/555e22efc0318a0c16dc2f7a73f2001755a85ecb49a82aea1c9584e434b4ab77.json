{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { catchError } from 'rxjs/operators';\nimport { selectIsLogin } from '../../store/app.selector';\nimport * as MyActions from '../../store/app.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Username is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, http, store, authService, location, router) {\n    this.fb = fb;\n    this.http = http;\n    this.store = store;\n    this.authService = authService;\n    this.location = location;\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken();\n    if (token) {\n      this.store.dispatch(MyActions.login());\n      this.router.navigate(['/']);\n    }\n    // console.log(token)\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.store.select(selectIsLogin).subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      const postData = {\n        ...this.loginForm.value\n      };\n      const url = 'http://localhost:3000/users/login';\n      this.http.post(url, postData).pipe(catchError(error => {\n        console.error('Error sending POST request', error);\n        throw error;\n      })).subscribe(response => {\n        console.log('POST request successful', response);\n        this.responseData = response;\n        if (this.responseData) {\n          const user = this.responseData.user;\n          const authToken = this.responseData.token;\n          this.authService.setAuthData(user, authToken);\n          this.isAuthenticated = true;\n          this.store.dispatch(MyActions.login());\n          this.router.navigate(['/']);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Store), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.Location), i0.ɵɵdirectiveInject(i6.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 5,\n    consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 8);\n        i0.ɵɵtext(16, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").hasError(\"required\") && ctx.loginForm.get(\"email\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").hasError(\"email\") && ctx.loginForm.get(\"email\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").hasError(\"required\") && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 49:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(7:5) /home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    border\\\\u001b[33m:\\\\u001b[39m 1px solid \\\\u001b[35m#ccc\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 6 | \\\\u001b[39m    border-radius\\\\u001b[33m:\\\\u001b[39m 5px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 7 | \\\\u001b[39m    margin-top\\\\n \\\\u001b[90m   | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 8 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 9 | \\\\u001b[39m  \\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[49]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["Validators","catchError","selectIsLogin","MyActions","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","http","store","authService","location","router","isAuthenticated","ngOnInit","token","getAuthToken","dispatch","login","navigate","loginForm","group","email","required","password","select","subscribe","isLogin","onSubmit","valid","console","log","value","postData","url","post","pipe","error","response","responseData","user","authToken","setAuthData","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Store","i4","AuthService","i5","Location","i6","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_8_Template","LoginComponent_div_9_Template","LoginComponent_div_14_Template","ɵɵadvance","ɵɵproperty","get","hasError","touched","invalid"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.ts","/home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class LoginComponent implements OnInit {\n  responseData:any\n  loginForm: FormGroup;\n  isLogin: boolean | undefined;\n  isAuthenticated: boolean = false;\n  constructor(private fb: FormBuilder, private http: HttpClient,private store: Store,private authService: AuthService,private location:Location,private router:Router) { \n    \n   \n  }\n\n  ngOnInit() {\n\n  \n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken()\n    if(token){\n      this.store.dispatch(MyActions.login());\n      this.router.navigate(['/']);\n    }\n    // console.log(token)\n    \n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.store.select(selectIsLogin).subscribe((isLogin) => {\n      this.isLogin = isLogin;\n    });\n    \n  \n  }\n\n  onSubmit() {\n    \n    if (this.loginForm.valid) {\n      \n      console.log(this.loginForm.value);\n\n      const postData = {\n         ...this.loginForm.value\n      };\n  \n      const url = 'http://localhost:3000/users/login'; \n  \n      this.http.post(url, postData)\n      .pipe(\n        catchError((error) => {\n        \n          console.error('Error sending POST request', error);\n          throw error;\n        })\n      )\n      .subscribe((response) => {\n        console.log('POST request successful', response);\n\n        this.responseData =response\n        if(this.responseData){\n        const user = this.responseData.user\n        const authToken = this.responseData.token  \n        this.authService.setAuthData(user,authToken);\n        this.isAuthenticated = true;\n        this.store.dispatch(MyActions.login());\n        this.router.navigate(['/']);\n      \n        }\n       \n        \n    \n        \n      });\n    }\n  }\n}\n","<div class=\"login-container\">\n    <h2>Login</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" id=\"email\" formControlName=\"email\" required>\n        <div *ngIf=\"loginForm.get('email').hasError('required') && loginForm.get('email').touched\" class=\"error\">\n          Username is required.\n        </div>\n        <div *ngIf=\"loginForm.get('email').hasError('email') && loginForm.get('email').touched\" class=\"error\">\n          Enter a valid email address.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\n        <div *ngIf=\"loginForm.get('password').hasError('required') && loginForm.get('password').touched\" class=\"error\">\n          Password is required.\n        </div>\n      </div>\n      <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n    </form>\n\n\n  \n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}