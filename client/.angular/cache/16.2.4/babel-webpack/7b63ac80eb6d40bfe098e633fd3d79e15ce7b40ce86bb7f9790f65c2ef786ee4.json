{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Username is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    console.log(\"hello\");\n    if (this.loginForm.valid) {\n      // Handle form submission, e.g., send data to server\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"username\").hasError(\"required\") && ctx.loginForm.get(\"username\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").hasError(\"required\") && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n    max-width: 300px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n  }\\n  \\n  input[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    padding: 10px 20px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .error-message[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 14px;\\n    margin-top: 10px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0VBQ25COztFQUVBOztJQUVFLFdBQVc7SUFDWCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLFVBQVU7SUFDVixlQUFlO0lBQ2YsZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIFxuICAuZm9ybS1ncm91cCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxuICBcbiAgbGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIFxuICBidXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIFxuICAuZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6IHJlZDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","ngOnInit","loginForm","group","username","required","password","onSubmit","console","log","valid","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","LoginComponent_div_8_Template","LoginComponent_div_13_Template","ɵɵadvance","ɵɵproperty","get","hasError","touched","invalid"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.ts","/home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    \n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  \n  }\n\n  onSubmit() {\n    console.log(\"hello\")\n    if (this.loginForm.valid) {\n      // Handle form submission, e.g., send data to server\n    }\n  }\n}\n","<div class=\"login-container\">\n    <h2>Login</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" id=\"username\" formControlName=\"username\" required>\n        <div *ngIf=\"loginForm.get('username').hasError('required') && loginForm.get('username').touched\" class=\"error\">\n          Username is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\n        <div *ngIf=\"loginForm.get('password').hasError('required') && loginForm.get('password').touched\" class=\"error\">\n          Password is required.\n        </div>\n      </div>\n      <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n    </form>\n  </div>\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;ICK3DC,EAAA,CAAAC,cAAA,aAA+G;IAC7GD,EAAA,CAAAE,MAAA,8BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAKNH,EAAA,CAAAC,cAAA,aAA+G;IAC7GD,EAAA,CAAAE,MAAA,8BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADPd,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EAAiB;EAEvCC,QAAQA,CAAA;IAEN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACnC,CAAC;EAEJ;EAEAE,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,IAAI,CAACP,SAAS,CAACQ,KAAK,EAAE;MACxB;IAAA;EAEJ;EAAC,QAAAC,CAAA,G;qBAnBUb,cAAc,EAAAJ,EAAA,CAAAkB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3B5B,EAAA,CAAAC,cAAA,aAA6B;QACrBD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACdH,EAAA,CAAAC,cAAA,cAAsD;QAAxBD,EAAA,CAAA8B,UAAA,sBAAAC,iDAAA;UAAA,OAAYF,GAAA,CAAAhB,QAAA,EAAU;QAAA,EAAC;QACnDb,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtCH,EAAA,CAAAgC,SAAA,eAAqE;QACrEhC,EAAA,CAAAiC,UAAA,IAAAC,6BAAA,iBAEM;QACRlC,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtCH,EAAA,CAAAgC,SAAA,gBAAyE;QACzEhC,EAAA,CAAAiC,UAAA,KAAAE,8BAAA,iBAEM;QACRnC,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,iBAAqD;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAf/DH,EAAA,CAAAoC,SAAA,GAAuB;QAAvBpC,EAAA,CAAAqC,UAAA,cAAAR,GAAA,CAAArB,SAAA,CAAuB;QAInBR,EAAA,CAAAoC,SAAA,GAAyF;QAAzFpC,EAAA,CAAAqC,UAAA,SAAAR,GAAA,CAAArB,SAAA,CAAA8B,GAAA,aAAAC,QAAA,gBAAAV,GAAA,CAAArB,SAAA,CAAA8B,GAAA,aAAAE,OAAA,CAAyF;QAOzFxC,EAAA,CAAAoC,SAAA,GAAyF;QAAzFpC,EAAA,CAAAqC,UAAA,SAAAR,GAAA,CAAArB,SAAA,CAAA8B,GAAA,aAAAC,QAAA,gBAAAV,GAAA,CAAArB,SAAA,CAAA8B,GAAA,aAAAE,OAAA,CAAyF;QAI3ExC,EAAA,CAAAoC,SAAA,GAA8B;QAA9BpC,EAAA,CAAAqC,UAAA,aAAAR,GAAA,CAAArB,SAAA,CAAAiC,OAAA,CAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}