{"ast":null,"code":"import { of, BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.products$ = new BehaviorSubject([]);\n    this.product$ = new BehaviorSubject(null);\n    this.baseUrl = 'http://localhost:3000/products/allProducts';\n  }\n  fetchProducts() {\n    this.products$ = this.http.get(this.baseUrl).pipe(catchError(error => {\n      console.error('Error sending get request', error);\n      throw error;\n    }), tap(data => {\n      this.products$ = of(data);\n    }));\n    return this.products$;\n  }\n  getStoredProducts() {\n    if (this.products$) {\n      return this.products$;\n    } else {\n      return this.fetchProducts();\n    }\n  }\n  fetchProduct(id) {\n    if (this.products$) {\n      this.products$.subscribe(data => {\n        this.products = data;\n        let myproduct = this.products.find(product => product._id == id);\n        this.product$ = asObservable(myproduct);\n      });\n    } else {\n      this.fetchProducts();\n    }\n    return this.product$;\n  }\n  getProduct(id) {\n    return this.fetchProduct(id);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","BehaviorSubject","catchError","tap","ProductService","constructor","http","products$","product$","baseUrl","fetchProducts","get","pipe","error","console","data","getStoredProducts","fetchProduct","id","subscribe","products","myproduct","find","product","_id","asObservable","getProduct","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, throwError,BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n \n  products:any;\n  private products$: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  private product$: BehaviorSubject<any | null> = new BehaviorSubject<any | null>(null);\n  private baseUrl = 'http://localhost:3000/products/allProducts';\n\n  constructor(private http: HttpClient) { }\n\n  fetchProducts(): Observable<any[]> {\n    this.products$ = this.http.get<any[]>(this.baseUrl).pipe(\n      catchError((error) => {\n        console.error('Error sending get request', error);\n        throw error;\n      }),\n      tap((data) => {\n       \n        this.products$ = of(data);\n      })\n    );\n\n    return this.products$;\n  }\n\n  getStoredProducts(): Observable<any[]> {\n    if (this.products$) {\n      return this.products$;\n    } else {\n    \n      return this.fetchProducts();\n    }\n  }\n\n\n  fetchProduct(id:any){\n    \n    if(this.products$){\n      this.products$.subscribe(\n        (data) => {\n          this.products = data; \n          let myproduct = this.products.find(product => product._id == id)\n          this.product$ = asObservable(myproduct)\n    \n        }\n      );\n    }\n    else{\n      this.fetchProducts()\n    }\n    \n    return this.product$\n  }\n\n  getProduct(id:any){\n   \n    \n      return this.fetchProduct(id);\n    \n  }\n}\n"],"mappings":"AAEA,SAAqBA,EAAE,EAAaC,eAAe,QAAQ,MAAM;AACjE,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;AAKhD,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,SAAS,GAA2B,IAAIN,eAAe,CAAQ,EAAE,CAAC;IAClE,KAAAO,QAAQ,GAAgC,IAAIP,eAAe,CAAa,IAAI,CAAC;IAC7E,KAAAQ,OAAO,GAAG,4CAA4C;EAEtB;EAExCC,aAAaA,CAAA;IACX,IAAI,CAACH,SAAS,GAAG,IAAI,CAACD,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACF,OAAO,CAAC,CAACG,IAAI,CACtDV,UAAU,CAAEW,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb,CAAC,CAAC,EACFV,GAAG,CAAEY,IAAI,IAAI;MAEX,IAAI,CAACR,SAAS,GAAGP,EAAE,CAACe,IAAI,CAAC;IAC3B,CAAC,CAAC,CACH;IAED,OAAO,IAAI,CAACR,SAAS;EACvB;EAEAS,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACT,SAAS,EAAE;MAClB,OAAO,IAAI,CAACA,SAAS;KACtB,MAAM;MAEL,OAAO,IAAI,CAACG,aAAa,EAAE;;EAE/B;EAGAO,YAAYA,CAACC,EAAM;IAEjB,IAAG,IAAI,CAACX,SAAS,EAAC;MAChB,IAAI,CAACA,SAAS,CAACY,SAAS,CACrBJ,IAAI,IAAI;QACP,IAAI,CAACK,QAAQ,GAAGL,IAAI;QACpB,IAAIM,SAAS,GAAG,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,IAAIN,EAAE,CAAC;QAChE,IAAI,CAACV,QAAQ,GAAGiB,YAAY,CAACJ,SAAS,CAAC;MAEzC,CAAC,CACF;KACF,MACG;MACF,IAAI,CAACX,aAAa,EAAE;;IAGtB,OAAO,IAAI,CAACF,QAAQ;EACtB;EAEAkB,UAAUA,CAACR,EAAM;IAGb,OAAO,IAAI,CAACD,YAAY,CAACC,EAAE,CAAC;EAEhC;EAAC,QAAAS,CAAA,G;qBA1DUvB,cAAc,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd5B,cAAc;IAAA6B,OAAA,EAAd7B,cAAc,CAAA8B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}