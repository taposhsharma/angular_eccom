{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nexport let HeaderComponent = class HeaderComponent {\n  constructor(store, authService, location, router) {\n    this.store = store;\n    this.authService = authService;\n    this.location = location;\n    this.router = router;\n    this.isLogin = true;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken();\n    if (token) {\n      this.store.dispatch(MyActions.login());\n      this.router.navigate(['/']);\n    }\n    this.store.select(selectIsLogin).subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n  getislogin() {\n    this.store.select(selectIsLogin).pipe(take(1)) // Use 'take(1)' to automatically unsubscribe after the first emission\n    .subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);","map":{"version":3,"names":["Component","selectIsLogin","take","MyActions","HeaderComponent","constructor","store","authService","location","router","isLogin","ngOnInit","isAuthenticated","token","getAuthToken","dispatch","login","navigate","select","subscribe","getislogin","pipe","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/header/header.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLogin:boolean =true\n  \n\n  constructor(private store:Store,private authService: AuthService,private location:Location,private router:Router){\n   \n  }\nngOnInit(){\n  this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken()\n    if(token){\n      this.store.dispatch(MyActions.login());\n      this.router.navigate(['/']);\n    }\n  this.store.select(selectIsLogin).subscribe((isLogin) => {\n    this.isLogin = isLogin;\n  });\n}\n\n  getislogin(){\n    this.store\n    .select(selectIsLogin)\n    .pipe(take(1)) // Use 'take(1)' to automatically unsubscribe after the first emission\n    .subscribe((isLogin) => {\n      this.isLogin = isLogin;\n      \n    });\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,IAAI,QAAQ,gBAAgB;AACrC,OAAO,KAAKC,SAAS,MAAM,yBAAyB;AAQ7C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,KAAW,EAASC,WAAwB,EAASC,QAAiB,EAASC,MAAa;IAA5F,KAAAH,KAAK,GAALA,KAAK;IAAe,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;IAAkB,KAAAC,MAAM,GAANA,MAAM;IAHzG,KAAAC,OAAO,GAAU,IAAI;EAKrB;EACFC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,GAAG,IAAI,CAACL,WAAW,CAACK,eAAe,EAAE;IACvD,MAAMC,KAAK,GAAG,IAAI,CAACN,WAAW,CAACO,YAAY,EAAE;IAC7C,IAAGD,KAAK,EAAC;MACP,IAAI,CAACP,KAAK,CAACS,QAAQ,CAACZ,SAAS,CAACa,KAAK,EAAE,CAAC;MACtC,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE/B,IAAI,CAACX,KAAK,CAACY,MAAM,CAACjB,aAAa,CAAC,CAACkB,SAAS,CAAET,OAAO,IAAI;MACrD,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EAEEU,UAAUA,CAAA;IACR,IAAI,CAACd,KAAK,CACTY,MAAM,CAACjB,aAAa,CAAC,CACrBoB,IAAI,CAACnB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAAA,CACdiB,SAAS,CAAET,OAAO,IAAI;MACrB,IAAI,CAACA,OAAO,GAAGA,OAAO;IAExB,CAAC,CAAC;EACJ;CAGD;AA9BYN,eAAe,GAAAkB,UAAA,EAL3BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWrB,eAAe,CA8B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}