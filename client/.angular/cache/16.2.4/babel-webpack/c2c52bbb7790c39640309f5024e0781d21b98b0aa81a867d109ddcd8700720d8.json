{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { catchError } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nexport let SignupComponent = class SignupComponent {\n  constructor(fb, http, store, authService, location, router) {\n    this.fb = fb;\n    this.http = http;\n    this.store = store;\n    this.authService = authService;\n    this.location = location;\n    this.router = router;\n    this.isAuthenticated = false;\n    this.signupForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    console.log('hello');\n    if (this.signupForm.valid) {\n      console.log(this.signupForm.value.firstName);\n      const postData = {\n        ...this.signupForm.value\n      };\n      const url = 'http://localhost:3000/users/signup';\n      this.http.post(url, postData).pipe(catchError(error => {\n        console.error('Error sending POST request', error);\n        throw error;\n      })).subscribe(response => {\n        console.log('POST request successful', response);\n        this.responseData = response;\n        if (this.responseData) {\n          const user = this.responseData.user;\n          const authToken = this.responseData.token;\n          this.authService.setAuthData(user, authToken);\n          this.isAuthenticated = true;\n          this.store.dispatch(MyActions.login());\n          this.router.navigate(['/']);\n        }\n      });\n    }\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","Validators","catchError","MyActions","SignupComponent","constructor","fb","http","store","authService","location","router","isAuthenticated","signupForm","group","firstName","required","lastName","email","password","minLength","onSubmit","console","log","valid","value","postData","url","post","pipe","error","subscribe","response","responseData","user","authToken","token","setAuthData","dispatch","login","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/signup/signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent {\n  signupForm: FormGroup;\n  responseData :any\n \n  \n  isLogin: boolean | undefined;\n  isAuthenticated: boolean = false;\n\n  constructor(private fb: FormBuilder,private http: HttpClient,private store: Store,private authService: AuthService,private location:Location,private router:Router) {\n    this.signupForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  onSubmit() {\n    console.log('hello')\n    if (this.signupForm.valid) {\n      \n      console.log(this.signupForm.value.firstName);\n\n      const postData = {\n         ...this.signupForm.value\n      };\n  \n      const url = 'http://localhost:3000/users/signup'; \n  \n      this.http.post(url, postData)\n      .pipe(\n        catchError((error) => {\n        \n          console.error('Error sending POST request', error);\n          throw error;\n        })\n      )\n      .subscribe((response) => {\n        console.log('POST request successful', response);\n\n        this.responseData =response\n        if(this.responseData){\n        const user = this.responseData.user\n        const authToken = this.responseData.token  \n        this.authService.setAuthData(user,authToken);\n        this.isAuthenticated = true;\n        this.store.dispatch(MyActions.login());\n        this.router.navigate(['/']);\n      \n        }\n       \n      });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,UAAU,QAAe,gBAAgB;AAClD,OAAO,KAAKC,SAAS,MAAM,yBAAyB;AAS7C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YAAoBC,EAAe,EAASC,IAAgB,EAASC,KAAY,EAASC,WAAwB,EAASC,QAAiB,EAASC,MAAa;IAA9I,KAAAL,EAAE,GAAFA,EAAE;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,KAAK,GAALA,KAAK;IAAgB,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;IAAkB,KAAAC,MAAM,GAANA,MAAM;IAF3J,KAAAC,eAAe,GAAY,KAAK;IAG9B,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MAC9BC,SAAS,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACe,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACe,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACe,QAAQ,EAAEf,UAAU,CAACiB,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACe,QAAQ,EAAEf,UAAU,CAACmB,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,IAAI,CAACV,UAAU,CAACW,KAAK,EAAE;MAEzBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAACY,KAAK,CAACV,SAAS,CAAC;MAE5C,MAAMW,QAAQ,GAAG;QACd,GAAG,IAAI,CAACb,UAAU,CAACY;OACrB;MAED,MAAME,GAAG,GAAG,oCAAoC;MAEhD,IAAI,CAACpB,IAAI,CAACqB,IAAI,CAACD,GAAG,EAAED,QAAQ,CAAC,CAC5BG,IAAI,CACH3B,UAAU,CAAE4B,KAAK,IAAI;QAEnBR,OAAO,CAACQ,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,MAAMA,KAAK;MACb,CAAC,CAAC,CACH,CACAC,SAAS,CAAEC,QAAQ,IAAI;QACtBV,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAES,QAAQ,CAAC;QAEhD,IAAI,CAACC,YAAY,GAAED,QAAQ;QAC3B,IAAG,IAAI,CAACC,YAAY,EAAC;UACrB,MAAMC,IAAI,GAAG,IAAI,CAACD,YAAY,CAACC,IAAI;UACnC,MAAMC,SAAS,GAAG,IAAI,CAACF,YAAY,CAACG,KAAK;UACzC,IAAI,CAAC3B,WAAW,CAAC4B,WAAW,CAACH,IAAI,EAACC,SAAS,CAAC;UAC5C,IAAI,CAACvB,eAAe,GAAG,IAAI;UAC3B,IAAI,CAACJ,KAAK,CAAC8B,QAAQ,CAACnC,SAAS,CAACoC,KAAK,EAAE,CAAC;UACtC,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;MAI7B,CAAC,CAAC;;EAEN;CACD;AAtDYpC,eAAe,GAAAqC,UAAA,EAL3BzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWxC,eAAe,CAsD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}