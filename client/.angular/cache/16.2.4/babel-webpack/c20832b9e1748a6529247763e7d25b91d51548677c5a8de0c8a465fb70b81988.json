{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as MyActions from './app.actions';\nexport const initialState = {\n  islogin: false\n};\nconst myReducer = createReducer(initialState, on(MyActions.login, state => ({\n  ...state,\n  islogin: true\n})), on(MyActions.logout, state => ({\n  ...state,\n  islogin: false\n})));\nexport function reducer(state, action) {\n  return myReducer(state, action);\n}","map":{"version":3,"names":["createReducer","on","MyActions","initialState","islogin","myReducer","login","state","logout","reducer","action"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/store/app.reduers.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\nimport * as MyActions from './app.actions';\n\nexport interface MyState {\n  islogin: boolean;\n}\n\nexport const initialState: MyState = {\n  islogin: false,\n};\n\nconst myReducer = createReducer(\n  initialState,\n  on(MyActions.login, (state) => ({ ...state, islogin: true })),\n  on(MyActions.logout, (state) => ({ ...state, islogin: false }))\n);\n\nexport function reducer(\n  state: MyState | undefined,\n  action: MyActions.MyActionsUnion\n): MyState {\n  return myReducer(state, action);\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,OAAO,KAAKC,SAAS,MAAM,eAAe;AAM1C,OAAO,MAAMC,YAAY,GAAY;EACnCC,OAAO,EAAE;CACV;AAED,MAAMC,SAAS,GAAGL,aAAa,CAC7BG,YAAY,EACZF,EAAE,CAACC,SAAS,CAACI,KAAK,EAAGC,KAAK,KAAM;EAAE,GAAGA,KAAK;EAAEH,OAAO,EAAE;AAAI,CAAE,CAAC,CAAC,EAC7DH,EAAE,CAACC,SAAS,CAACM,MAAM,EAAGD,KAAK,KAAM;EAAE,GAAGA,KAAK;EAAEH,OAAO,EAAE;AAAK,CAAE,CAAC,CAAC,CAChE;AAED,OAAM,SAAUK,OAAOA,CACrBF,KAA0B,EAC1BG,MAAgC;EAEhC,OAAOL,SAAS,CAACE,KAAK,EAAEG,MAAM,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}