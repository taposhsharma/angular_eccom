{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { selectIsLogin } from '../../store/app.selector';\nimport * as MyActions from '../../store/app.actions';\nexport let HeaderComponent = class HeaderComponent {\n  constructor(store, authService, router) {\n    this.store = store;\n    this.authService = authService;\n    this.router = router;\n    this.isLogin = true;\n  }\n  ngOnInit() {\n    const token = this.authService.getAuthToken();\n    if (token) {\n      this.store.dispatch(MyActions.login());\n    }\n    this.store.select(selectIsLogin).subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n  login() {\n    this.router.navigate(['/login']);\n  }\n  logout() {\n    this.authService.logout();\n    this.store.dispatch(MyActions.logout());\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);","map":{"version":3,"names":["Component","selectIsLogin","MyActions","HeaderComponent","constructor","store","authService","router","isLogin","ngOnInit","token","getAuthToken","dispatch","login","select","subscribe","navigate","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/header/header.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLogin:boolean =true\n  \n\n  constructor(private store:Store,private authService: AuthService,private router:Router){\n   \n  }\nngOnInit(){\n  \n    const token = this.authService.getAuthToken()\n    if(token){\n      this.store.dispatch(MyActions.login());\n      \n    }\n  this.store.select(selectIsLogin).subscribe((isLogin) => {\n    this.isLogin = isLogin;\n  });\n}\nlogin(){\n  this.router.navigate(['/login'])\n}\nlogout(){\n  this.authService.logout();\n  this.store.dispatch(MyActions.logout());\n\n}\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAO,KAAKC,SAAS,MAAM,yBAAyB;AAS7C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,KAAW,EAASC,WAAwB,EAASC,MAAa;IAAlE,KAAAF,KAAK,GAALA,KAAK;IAAe,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAH/E,KAAAC,OAAO,GAAU,IAAI;EAKrB;EACFC,QAAQA,CAAA;IAEJ,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE;IAC7C,IAAGD,KAAK,EAAC;MACP,IAAI,CAACL,KAAK,CAACO,QAAQ,CAACV,SAAS,CAACW,KAAK,EAAE,CAAC;;IAG1C,IAAI,CAACR,KAAK,CAACS,MAAM,CAACb,aAAa,CAAC,CAACc,SAAS,CAAEP,OAAO,IAAI;MACrD,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EACAK,KAAKA,CAAA;IACH,IAAI,CAACN,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACX,WAAW,CAACW,MAAM,EAAE;IACzB,IAAI,CAACZ,KAAK,CAACO,QAAQ,CAACV,SAAS,CAACe,MAAM,EAAE,CAAC;EAEzC;CAEC;AA3BYd,eAAe,GAAAe,UAAA,EAL3BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWlB,eAAe,CA2B3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}