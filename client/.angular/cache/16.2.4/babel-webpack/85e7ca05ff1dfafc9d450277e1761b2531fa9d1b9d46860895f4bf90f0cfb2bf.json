{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/products/allProducts';\n  }\n  fetchProducts() {\n    this.products$ = this.http.get(this.baseUrl).pipe(catchError(error => {\n      console.error('Error sending get request', error);\n      throw error;\n    }), tap(data => {\n      this.products$ = of(data);\n    }));\n    return this.products$;\n  }\n  fetchProductById(id) {\n    console.log(id);\n    const productUrl = 'http://localhost:3000/products/product/' + id;\n    console.log(productUrl);\n    this.product$ = this.http.get(productUrl).pipe(catchError(error => {\n      console.error('Error sending get request', error);\n      throw error;\n    }), tap(data => {\n      console.log(\"hello\");\n      // product = of(data);\n    }));\n\n    return product;\n  }\n  getStoredProducts() {\n    if (this.products$) {\n      return this.products$;\n    } else {\n      return this.fetchProducts();\n    }\n  }\n  fetchProduct(id) {\n    if (this.products$) {\n      this.products$.subscribe(data => {\n        this.products = data;\n        console.log(this.products);\n      });\n      const myproduct = this.products.find(product => product._id == id);\n      return of(myproduct || null);\n    } else {\n      this.fetchProductById(id);\n      return of(null);\n    }\n    // return this.getStoredProducts().pipe(\n    //   switchMap((products) => {\n    //     const myproduct = products.find(product => product._id == id);\n    //     return of(myproduct || null);\n    //   })\n    // );\n  }\n\n  getProduct(id) {\n    return this.fetchProduct(id);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","catchError","tap","ProductService","constructor","http","baseUrl","fetchProducts","products$","get","pipe","error","console","data","fetchProductById","id","log","productUrl","product$","product","getStoredProducts","fetchProduct","subscribe","products","myproduct","find","_id","getProduct","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, tap ,switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private products$: Observable<any[]>;\n  products:any;\n  private product$: Observable<any[]>;\n  product:any\n  private baseUrl = 'http://localhost:3000/products/allProducts';\n\n  constructor(private http: HttpClient) { }\n\n  fetchProducts(): Observable<any[]> {\n    this.products$ = this.http.get<any[]>(this.baseUrl).pipe(\n      catchError((error) => {\n        console.error('Error sending get request', error);\n        throw error;\n      }),\n      tap((data) => {\n       \n        this.products$ = of(data);\n      })\n    );\n\n    return this.products$;\n  }\n\n\n  fetchProductById(id:any): Observable<any[]> {\n    console.log(id)\n    const productUrl = 'http://localhost:3000/products/product/'+id\n    console.log(productUrl)\n    \n    this .product$ = this.http.get<any[]>(productUrl).pipe(\n      catchError((error) => {\n        console.error('Error sending get request', error);\n        throw error;\n      }),\n      tap((data) => {\n        console.log(\"hello\")\n       \n        // product = of(data);\n      })\n    );\n\n    return product\n  } \n\n  getStoredProducts(): Observable<any[]> {\n    if (this.products$) {\n      return this.products$;\n    } else {\n    \n      return this.fetchProducts();\n    }\n  }\n\n\n  fetchProduct(id: any): Observable<any | null> {\n    if (this.products$){\n    this.products$.subscribe(\n        (data) => {\n          this.products = data; \n          console.log(this.products);\n        }\n      );\n\n      const myproduct = this.products.find(product => product._id == id);\n      return of(myproduct || null);\n    }\n  else{\n    this.fetchProductById(id)\n    \n    return of( null);\n  }\n    \n    // return this.getStoredProducts().pipe(\n    //   switchMap((products) => {\n    //     const myproduct = products.find(product => product._id == id);\n    //     return of(myproduct || null);\n    //   })\n    // );\n  }\n\n  getProduct(id: any): Observable<any | null> {\n    return this.fetchProduct(id);\n  }\n}\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAoB,MAAM;AACjD,SAASC,UAAU,EAAEC,GAAG,QAAmB,gBAAgB;;;AAK3D,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,4CAA4C;EAEtB;EAExCC,aAAaA,CAAA;IACX,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,OAAO,CAAC,CAACI,IAAI,CACtDT,UAAU,CAAEU,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb,CAAC,CAAC,EACFT,GAAG,CAAEW,IAAI,IAAI;MAEX,IAAI,CAACL,SAAS,GAAGR,EAAE,CAACa,IAAI,CAAC;IAC3B,CAAC,CAAC,CACH;IAED,OAAO,IAAI,CAACL,SAAS;EACvB;EAGAM,gBAAgBA,CAACC,EAAM;IACrBH,OAAO,CAACI,GAAG,CAACD,EAAE,CAAC;IACf,MAAME,UAAU,GAAG,yCAAyC,GAACF,EAAE;IAC/DH,OAAO,CAACI,GAAG,CAACC,UAAU,CAAC;IAEvB,IAAI,CAAEC,QAAQ,GAAG,IAAI,CAACb,IAAI,CAACI,GAAG,CAAQQ,UAAU,CAAC,CAACP,IAAI,CACpDT,UAAU,CAAEU,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb,CAAC,CAAC,EACFT,GAAG,CAAEW,IAAI,IAAI;MACXD,OAAO,CAACI,GAAG,CAAC,OAAO,CAAC;MAEpB;IACF,CAAC,CAAC,CACH;;IAED,OAAOG,OAAO;EAChB;EAEAC,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACZ,SAAS,EAAE;MAClB,OAAO,IAAI,CAACA,SAAS;KACtB,MAAM;MAEL,OAAO,IAAI,CAACD,aAAa,EAAE;;EAE/B;EAGAc,YAAYA,CAACN,EAAO;IAClB,IAAI,IAAI,CAACP,SAAS,EAAC;MACnB,IAAI,CAACA,SAAS,CAACc,SAAS,CACnBT,IAAI,IAAI;QACP,IAAI,CAACU,QAAQ,GAAGV,IAAI;QACpBD,OAAO,CAACI,GAAG,CAAC,IAAI,CAACO,QAAQ,CAAC;MAC5B,CAAC,CACF;MAED,MAAMC,SAAS,GAAG,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACN,OAAO,IAAIA,OAAO,CAACO,GAAG,IAAIX,EAAE,CAAC;MAClE,OAAOf,EAAE,CAACwB,SAAS,IAAI,IAAI,CAAC;KAC7B,MACC;MACF,IAAI,CAACV,gBAAgB,CAACC,EAAE,CAAC;MAEzB,OAAOf,EAAE,CAAE,IAAI,CAAC;;IAGhB;IACA;IACA;IACA;IACA;IACA;EACF;;EAEA2B,UAAUA,CAACZ,EAAO;IAChB,OAAO,IAAI,CAACM,YAAY,CAACN,EAAE,CAAC;EAC9B;EAAC,QAAAa,CAAA,G;qBAnFUzB,cAAc,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd9B,cAAc;IAAA+B,OAAA,EAAd/B,cAAc,CAAAgC,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}