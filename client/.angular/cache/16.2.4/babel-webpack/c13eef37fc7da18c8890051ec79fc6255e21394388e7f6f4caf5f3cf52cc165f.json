{"ast":null,"code":"import { selectIsLogin } from '../../store/app.selector';\nimport * as MyActions from '../../store/app.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction HeaderComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_div_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.login());\n    });\n    i0.ɵɵtext(2, \"login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HeaderComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\");\n    i0.ɵɵtext(2, \"logout\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class HeaderComponent {\n  constructor(store, authService, router) {\n    this.store = store;\n    this.authService = authService;\n    this.router = router;\n    this.isLogin = true;\n  }\n  ngOnInit() {\n    const token = this.authService.getAuthToken();\n    if (token) {\n      this.store.dispatch(MyActions.login());\n    }\n    this.store.select(selectIsLogin).subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n  login() {\n    this.router.navigate(['/login']);\n  }\n  logout() {\n    this.router.navigate;\n  }\n  static #_ = this.ɵfac = function HeaderComponent_Factory(t) {\n    return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeaderComponent,\n    selectors: [[\"app-header\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"navbar\", \"fixed-top\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"container\"], [1, \"row\"], [1, \"col\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"col\", \"left\"], [4, \"ngIf\"], [3, \"click\"]],\n    template: function HeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4);\n        i0.ɵɵtext(5, \"E-comm\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, HeaderComponent_div_9_Template, 3, 0, \"div\", 6);\n        i0.ɵɵtemplate(10, HeaderComponent_div_10_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.isLogin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLogin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLogin);\n      }\n    },\n    dependencies: [i4.NgIf],\n    styles: [\".row[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n.left[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: right;\\n     \\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjs7QUFFMUIiLCJzb3VyY2VzQ29udGVudCI6WyIucm93e1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubGVmdHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogcmlnaHQ7XG4gICAgIFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["selectIsLogin","MyActions","i0","ɵɵelementStart","ɵɵlistener","HeaderComponent_div_9_Template_button_click_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","login","ɵɵtext","ɵɵelementEnd","HeaderComponent","constructor","store","authService","router","isLogin","ngOnInit","token","getAuthToken","dispatch","select","subscribe","navigate","logout","_","ɵɵdirectiveInject","i1","Store","i2","AuthService","i3","Router","_2","selectors","decls","vars","consts","template","HeaderComponent_Template","rf","ctx","ɵɵtemplate","HeaderComponent_div_9_Template","HeaderComponent_div_10_Template","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/header/header.component.ts","/home/tapos/Desktop/Angular/eccom/client/src/app/header/header.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLogin:boolean =true\n  \n\n  constructor(private store:Store,private authService: AuthService,private router:Router){\n   \n  }\nngOnInit(){\n  \n    const token = this.authService.getAuthToken()\n    if(token){\n      this.store.dispatch(MyActions.login());\n      \n    }\n  this.store.select(selectIsLogin).subscribe((isLogin) => {\n    this.isLogin = isLogin;\n  });\n}\nlogin(){\n  this.router.navigate(['/login'])\n}\nlogout(){\n  this.router.navigate\n}\n\n}\n","<nav class=\"navbar fixed-top  navbar-expand-lg navbar-dark bg-dark \">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <a class=\"navbar-brand\" href=\"#\">E-comm</a>\n            </div>\n            <div class=\"col left\">\n               <button>{{isLogin}}</button>\n              <div *ngIf=\"!isLogin\">\n\n                \n                <button  (click)=\"login()\">login</button>\n            </div>\n            <div *ngIf=\"isLogin\">\n                <button >logout</button>\n            </div>\n            </div>\n        </div>\n       \n        \n\n        \n\n    </div>\n    \n   \n  </nav>"],"mappings":"AAEA,SAASA,aAAa,QAAQ,0BAA0B;AAExD,OAAO,KAAKC,SAAS,MAAM,yBAAyB;;;;;;;;;ICItCC,EAAA,CAAAC,cAAA,UAAsB;IAGXD,EAAA,CAAAE,UAAA,mBAAAC,uDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,KAAA,EAAO;IAAA,EAAC;IAACT,EAAA,CAAAU,MAAA,YAAK;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;;IAE7CX,EAAA,CAAAC,cAAA,UAAqB;IACRD,EAAA,CAAAU,MAAA,aAAM;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;ADDxC,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,KAAW,EAASC,WAAwB,EAASC,MAAa;IAAlE,KAAAF,KAAK,GAALA,KAAK;IAAe,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAH/E,KAAAC,OAAO,GAAU,IAAI;EAKrB;EACFC,QAAQA,CAAA;IAEJ,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE;IAC7C,IAAGD,KAAK,EAAC;MACP,IAAI,CAACL,KAAK,CAACO,QAAQ,CAACtB,SAAS,CAACU,KAAK,EAAE,CAAC;;IAG1C,IAAI,CAACK,KAAK,CAACQ,MAAM,CAACxB,aAAa,CAAC,CAACyB,SAAS,CAAEN,OAAO,IAAI;MACrD,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EACAR,KAAKA,CAAA;IACH,IAAI,CAACO,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACT,MAAM,CAACQ,QAAQ;EACtB;EAAC,QAAAE,CAAA,G;qBAvBYd,eAAe,EAAAZ,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,KAAA,GAAA7B,EAAA,CAAA2B,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA/B,EAAA,CAAA2B,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAftB,eAAe;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb5BzC,EAAA,CAAAC,cAAA,aAAqE;QAIpBD,EAAA,CAAAU,MAAA,aAAM;QAAAV,EAAA,CAAAW,YAAA,EAAI;QAE/CX,EAAA,CAAAC,cAAA,aAAsB;QACXD,EAAA,CAAAU,MAAA,GAAW;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAC7BX,EAAA,CAAA2C,UAAA,IAAAC,8BAAA,iBAII;QACN5C,EAAA,CAAA2C,UAAA,KAAAE,+BAAA,iBAEM;QACN7C,EAAA,CAAAW,YAAA,EAAM;;;QATKX,EAAA,CAAA8C,SAAA,GAAW;QAAX9C,EAAA,CAAA+C,iBAAA,CAAAL,GAAA,CAAAzB,OAAA,CAAW;QACdjB,EAAA,CAAA8C,SAAA,GAAc;QAAd9C,EAAA,CAAAgD,UAAA,UAAAN,GAAA,CAAAzB,OAAA,CAAc;QAKhBjB,EAAA,CAAA8C,SAAA,GAAa;QAAb9C,EAAA,CAAAgD,UAAA,SAAAN,GAAA,CAAAzB,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}