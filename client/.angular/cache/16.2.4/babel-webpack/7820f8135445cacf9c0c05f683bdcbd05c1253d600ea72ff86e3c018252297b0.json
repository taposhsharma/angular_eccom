{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { catchError } from 'rxjs/operators';\nimport { selectIsLogin } from '../../store/app.selector';\nimport * as MyActions from '../../store/app.actions';\nimport { ChangeDetectionStrategy } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(fb, http, store, authService, location, router) {\n    this.fb = fb;\n    this.http = http;\n    this.store = store;\n    this.authService = authService;\n    this.location = location;\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken();\n    console.log(token);\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n    this.store.select(selectIsLogin).subscribe(isLogin => {\n      this.isLogin = isLogin;\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      const postData = {\n        ...this.loginForm.value\n      };\n      const url = 'http://localhost:3000/users/login';\n      this.http.post(url, postData).pipe(catchError(error => {\n        console.error('Error sending POST request', error);\n        throw error;\n      })).subscribe(response => {\n        console.log('POST request successful', response);\n        this.responseData = response;\n        if (this.responseData) {\n          const user = this.responseData.user;\n          const authToken = this.responseData.token;\n          this.authService.setAuthData(user, authToken);\n          this.isAuthenticated = true;\n          this.store.dispatch(MyActions.login());\n          this.router.navigate(['/dashboard']);\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","catchError","selectIsLogin","MyActions","ChangeDetectionStrategy","LoginComponent","constructor","fb","http","store","authService","location","router","isAuthenticated","ngOnInit","token","getAuthToken","console","log","loginForm","group","email","required","password","select","subscribe","isLogin","onSubmit","valid","value","postData","url","post","pipe","error","response","responseData","user","authToken","setAuthData","dispatch","login","navigate","__decorate","selector","templateUrl","styleUrls","changeDetection","Default"],"sources":["/home/tapos/Desktop/Angular/eccom/client/src/app/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { selectIsLogin } from '../../store/app.selector';\nimport { take } from 'rxjs/operators';\nimport * as MyActions from '../../store/app.actions';\nimport { AuthService } from '../auth.service';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class LoginComponent implements OnInit {\n  responseData:any\n  loginForm: FormGroup;\n  isLogin: boolean | undefined;\n  isAuthenticated: boolean = false;\n  constructor(private fb: FormBuilder, private http: HttpClient,private store: Store,private authService: AuthService,private location:Location,private router) { \n    \n   \n  }\n\n  ngOnInit() {\n\n  \n    this.isAuthenticated = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken()\n    \n    console.log(token)\n    \n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.store.select(selectIsLogin).subscribe((isLogin) => {\n      this.isLogin = isLogin;\n    });\n    \n  \n  }\n\n  onSubmit() {\n    \n    if (this.loginForm.valid) {\n      \n      console.log(this.loginForm.value);\n\n      const postData = {\n         ...this.loginForm.value\n      };\n  \n      const url = 'http://localhost:3000/users/login'; \n  \n      this.http.post(url, postData)\n      .pipe(\n        catchError((error) => {\n        \n          console.error('Error sending POST request', error);\n          throw error;\n        })\n      )\n      .subscribe((response) => {\n        console.log('POST request successful', response);\n\n        this.responseData =response\n        if(this.responseData){\n        const user = this.responseData.user\n        const authToken = this.responseData.token  \n        this.authService.setAuthData(user,authToken);\n        this.isAuthenticated = true;\n        this.store.dispatch(MyActions.login());\n        this.router.navigate(['/dashboard']);\n      \n        }\n       \n        \n    \n        \n      });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}